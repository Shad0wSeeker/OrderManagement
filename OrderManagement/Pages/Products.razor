@page "/product/{ProductId}"
@using OrderManagement.Data.Entities
@using OrderManagement.Data.Mediatr.Order
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Товар</h3>

@if (product == null)
{
    <p>Загрузка...</p>
}
else
{
    <div style="display: flex; flex-direction: column; align-items: center; gap: 20px;">
        <h4>@product.Name</h4>
        <img src="@($"/Images/{product.Name}.jpg")" alt="@product.Name" style="max-width: 30%; height: auto;" />
        <p>@product.Description</p>
        <p>Цена: <b>@product.Price ₽</b></p>
        <p>Поставщик: <b>@(product.SupplierId > 0 ? $"Поставщик #{product.SupplierId}" : "Не указан")</b></p>

        @* <button @onclick="CreateOrder" style="padding: 10px 20px; font-size: 16px; cursor: pointer;">Купить</button> *@
    </div>
}

@code {
    [Parameter] public int ProductId { get; set; }
    private Product product;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            product = await Http.GetFromJsonAsync<Product>($"https://localhost:7113/api/Product/{ProductId}");
            if (product == null)
            {
                Console.WriteLine("Продукт не найден.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при получении данных о продукте: {ex.Message}");
        }
    }

   
}
